openapi: 3.0.0
info:
  title: Pdf renderer API
  version: 0.1.0

tags:
- name: health
  description: Basic endpoints for retrieving health of the API.
- name: processing
  description: Endpoints for the main processing of documents.

paths:
  /ping:
    get:
      operationId: src.api.handlers.health.ping
      summary: Ping pong.
      tags:
      - health
      responses:
        '200':
          description: Some default message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ping'
  /result/{document_id}:
    get:
      operationId: src.api.handlers.processing.get_result_full
      summary: Get PNG images of processed document.
      tags:
      - processing
      parameters:
      - in: path
        name: document_id
        schema:
          type: integer
          format: int64
          minimum: 0
        required: true
      responses:
        '200':
          description: Processed PNG images.
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ProcessedFiles'
        '404':
          description: No file was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Processing is not finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /result/{document_id}/{page}:
    get:
      operationId: src.api.handlers.processing.get_result_page
      summary: Get one page of processed document.
      tags:
      - processing
      parameters:
      - in: path
        name: document_id
        schema:
          type: integer
          format: int64
          minimum: 0
        required: true
      - in: path
        name: page
        schema:
          type: integer
        required: true
      responses:
        '200':
          description: Processed PNG images.
          content:
            image/png:
              schema:
                type: string
                format: binary
        '404':
          description: No file was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Processing is not finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /status/{document_id}:
    get:
      operationId: src.api.handlers.processing.get_status
      summary: Get the status of processing of a document.
      tags:
      - processing
      parameters:
      - in: path
        name: document_id
        schema:
          type: integer
          format: int64
          minimum: 0
        required: true
      responses:
        '200':
          description: Processing status of a document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingStatus'
        '404':
          description: Document was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /upload:
    post:
      operationId: src.api.handlers.processing.upload_document
      summary: Upload a PDF document to start processing.
      tags:
      - processing
      requestBody:
        description: A PDF document to be uploaded.
        content:
          application/pdf:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Document successfully uploaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploaded'
        '400':
          description: Wrong format of document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: Payload too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 400
        message:
          type: string
    DocumentUploaded:
      type: object
      properties:
        id:
          type: number
          minimum: 0
          example: 42
        message:
          type: string
          example: Document uploaded and processing started.
    Ping:
      type: object
      properties:
        status:
          type: string
    ProcessedFiles:
      type: array
      items:
        type: string
        format: binary
    ProcessingStatus:
      type: object
      properties:
        id:
          type: number
          minimum: 0
          example: 42
        pages:
          type: number
          example: 3
        status:
          type: string
          example: Successfully finished.
